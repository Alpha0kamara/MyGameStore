// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyGameStoreWebApi.DAL;

namespace MyGameStoreWebApi.Migrations
{
    [DbContext(typeof(GameStoreContext))]
    [Migration("20240805130035_AddedDataSeed")]
    partial class AddedDataSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyGameStoreWebApi.Model.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("EmailAddress");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("StoreId");

                    b.ToTable("tblPeople", "Person");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            Gender = 1,
                            LastName = "Doe",
                            StoreId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            Gender = 2,
                            LastName = "Smith",
                            StoreId = 1
                        },
                        new
                        {
                            Id = 3,
                            Email = "mike.johnson@example.com",
                            FirstName = "Mike",
                            Gender = 1,
                            LastName = "Johnson",
                            StoreId = 2
                        },
                        new
                        {
                            Id = 4,
                            Email = "emily.brown@example.com",
                            FirstName = "Emily",
                            Gender = 2,
                            LastName = "Brown",
                            StoreId = 2
                        });
                });

            modelBuilder.Entity("MyGameStoreWebApi.Model.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addition")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("City")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Place");

                    b.Property<bool>("IsFranchiseStore")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Zipcode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("tblStores", "Store");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "GameCity",
                            IsFranchiseStore = false,
                            Name = "GameStore",
                            Number = "1",
                            Street = "GameStreet",
                            Zipcode = "1234AB"
                        },
                        new
                        {
                            Id = 2,
                            City = "GymeCity",
                            IsFranchiseStore = true,
                            Name = "GymeStore",
                            Number = "2",
                            Street = "GymeStreet",
                            Zipcode = "1234AB"
                        });
                });

            modelBuilder.Entity("MyGameStoreWebApi.Model.Person", b =>
                {
                    b.HasOne("MyGameStoreWebApi.Model.Store", "Store")
                        .WithMany("Persons")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Store");
                });

            modelBuilder.Entity("MyGameStoreWebApi.Model.Store", b =>
                {
                    b.Navigation("Persons");
                });
#pragma warning restore 612, 618
        }
    }
}
